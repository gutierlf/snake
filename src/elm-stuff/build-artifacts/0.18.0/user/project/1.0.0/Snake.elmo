var _user$project$Snake$move = function (model) {
	var _p0 = function () {
		var _p1 = model.heading;
		switch (_p1.ctor) {
			case 'North':
				return {ctor: '_Tuple2', _0: 0, _1: -1};
			case 'East':
				return {ctor: '_Tuple2', _0: 1, _1: 0};
			case 'South':
				return {ctor: '_Tuple2', _0: 0, _1: 1};
			default:
				return {ctor: '_Tuple2', _0: -1, _1: 0};
		}
	}();
	var dx = _p0._0;
	var dy = _p0._1;
	var _p2 = model.position;
	var x = _p2._0;
	var y = _p2._1;
	return _elm_lang$core$Native_Utils.update(
		model,
		{
			position: {ctor: '_Tuple2', _0: x + dx, _1: y + dy}
		});
};
var _user$project$Snake$update = F2(
	function (msg, model) {
		var _p3 = msg;
		return _user$project$Snake$move(model);
	});
var _user$project$Snake$origin = {ctor: '_Tuple2', _0: 0, _1: 0};
var _user$project$Snake$Model = F2(
	function (a, b) {
		return {position: a, heading: b};
	});
var _user$project$Snake$West = {ctor: 'West'};
var _user$project$Snake$South = {ctor: 'South'};
var _user$project$Snake$East = {ctor: 'East'};
var _user$project$Snake$cranium = A2(_user$project$Snake$Model, _user$project$Snake$origin, _user$project$Snake$East);
var _user$project$Snake$North = {ctor: 'North'};
var _user$project$Snake$opposite_heading = function (heading) {
	var _p4 = heading;
	switch (_p4.ctor) {
		case 'North':
			return _user$project$Snake$South;
		case 'East':
			return _user$project$Snake$West;
		case 'South':
			return _user$project$Snake$North;
		default:
			return _user$project$Snake$East;
	}
};
var _user$project$Snake$is_opposite_heading = F2(
	function (heading, other) {
		return _elm_lang$core$Native_Utils.eq(
			_user$project$Snake$opposite_heading(heading),
			other);
	});
var _user$project$Snake$turn = F2(
	function (heading, model) {
		return A2(_user$project$Snake$is_opposite_heading, heading, model.heading) ? model : _elm_lang$core$Native_Utils.update(
			model,
			{heading: heading});
	});
var _user$project$Snake$Tick = {ctor: 'Tick'};
var _user$project$Snake$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Snake$Tick),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Tick'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Snake$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Snake$cranium, view: _user$project$Snake$view, update: _user$project$Snake$update})();
